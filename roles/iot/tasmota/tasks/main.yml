---
#- name: set tasmota_host to ip
#  set_fact:
#    tasmota_host: "{{ ip }}"

- name: set some basic settings
  include_role:
    name: roles/iot/ansible-tasmota
  vars:
    tasmota_commands:
      - command: TelePeriod
        value: "{{ tele_period }}"
      - command: LedState
        value: 0
      - command: FriendlyName
        value: "{{ friendly_name | default(inventory_hostname) }}"
      - command: DeviceName
        value: "{{ friendly_name | default(inventory_hostname) }}"
      - command: Hostname
        value: "{{ inventory_hostname }}"
      - command: SetOption21 # Energy monitoring when power is off
        value: 1
      - command: SetOption53 # Display hostname and IP address in GUI
        value: 1
      - command: Timers
        value: "{{ timers_active }}"
        
- name: set custom settings
  include_role:
    name: roles/iot/ansible-tasmota
  vars:
    tasmota_commands: "{{ tasmota_custom }}"
  when:
    - tasmota_custom is defined
    
        
- name: calibrate
  include_role:
    name: roles/iot/ansible-tasmota
  vars:
    tasmota_commands:
      - command: VoltageSet
        value: "{{ calibration.voltage }}"
      - command: PowerSet
        value: "{{ calibration.power }}"
      - command: CurrentSet
        value: "{{ calibration.current }}"
  when: calibrate is defined

- name: set some more settings
  include_role:
    name: roles/iot/ansible-tasmota
  vars:
    tasmota_commands: "{{ commands }}"
  when: commands is defined

- name: set timer
  include_role:
    name: roles/iot/ansible-tasmota
  vars:
    tasmota_commands:
      - command: Timer{{ timer_id + 1 }}
        value: "{{ timer_value }}"
  loop: "{{ timer }}"
  loop_control:
    index_var: timer_id
    loop_var: timer_value

- name: set network to fixed ip
  include_role:
    name: roles/iot/ansible-tasmota
  vars:
    tasmota_commands:
      - command: Backlog
        value: IPAddress1 {{ ip }}; IPAddress2 {{ gateway }}; IPAddress2 {{ netmask }}; IPAddress4 {{ dns }};
  when: not dhcp and ip is defined
  
- name: set network to dhcp
  include_role:
    name: roles/iot/ansible-tasmota
  vars:
    tasmota_commands:
      - command: Backlog
        value: IPAddress1 0.0.0.0; IPAddress2 0.0.0.0; IPAddress2 0.0.0.0; IPAddress4 0.0.0.0;
  when: dhcp
  
  
- name: set the wifi1 settings
  include_role:
    name: roles/iot/ansible-tasmota
  vars:
    tasmota_commands:
      - command: Backlog
        value: Ssid1 {{ wlan1_ssid }}; Password1 {{ vault_wlan1_password }};
  when: set_wifi1 and wlan1_ssid is defined and vault_wlan1_password is defined

- name: set the wifi2 settings
  include_role:
    name: roles/iot/ansible-tasmota
  vars:
    tasmota_commands:
      - command: Backlog
        value: Ssid2 {{ wlan2_ssid }}; Password2 {{ vault_wlan2_password }};
  when: set_wifi2 and wlan1_ssid is defined and vault_wlan2_password is defined

- name: restart the device
  include_role:
    name: roles/iot/ansible-tasmota
  vars:
    tasmota_commands:
      - command: restart
        value: 1
  when: restart
